consumes:
  - application/json
info:
  description: HTTP server in Go with Swagger endpoints definition.
  title: go-rest-api
  version: 0.1.0
produces:
  - application/json
schemes:
  - http
swagger: "2.0"

paths:
  /:
    get:
      operationId: returnPing
      produces:
        - text/plain
      responses:
        "200":
          description: OK message.
          schema:
            type: string
            enum:
              - OK
  /post:
    post:
      operationId: postMessage
      produces:
        - text/plain
      parameters:
        - in: body
          name: body
          description: Message to post
          required: true
          schema:
            $ref: "#/definitions/node"
      responses:
        "200":
          description: OK message.
          schema:
            type: string
            enum:
              - OK
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/error"
  /summary:
    get:
      operationId: getSummary
      produces:
        - application/json
      responses:
        "200":
          description: OK message.
          schema:
            type: array
            items:
              $ref: "#/definitions/node"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/error"
  /node/{roomNum}:
    get:
      operationId: getNode
      produces:
        - application/json
      parameters:
        - name: roomNum
          in: path
          description: Room number
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK message.
          schema:
            $ref: "#/definitions/node"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/error"

definitions:
  node:
    type: object
    required:
      - apiKey
      - nodeType
      - nodeSize
      - roomId
    properties:
      apiKey:
        type: string
      roomId:
        type: integer
        format: int64
      nodeType:
        type: string
        enum:
          - bone
          - carbon
          - coal
          - gems
          - ice
          - iron
          - obsidian
          - platinum
          - silver
          - stone
      nodeSize:
        type: string
        enum:
          - tiny
          - small
          - medium
          - large
          - huge
          - massive
      claimedBy:
        type: string
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
